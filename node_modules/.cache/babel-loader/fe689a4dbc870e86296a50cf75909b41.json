{"ast":null,"code":"var _jsxFileName = \"/Users/kingasekalska/Downloads/ToDoApp/src/components/TaskList.js\";\nimport React from 'react';\nimport Task from './Task';\n\nvar TaskList = function TaskList(props) {\n  var active = props.tasks.filter(function (task) {\n    return task.active;\n  });\n  var done = props.tasks.filter(function (task) {\n    return !task.active;\n  }); // done.sort((a, b) => b.finishDate - a.finishDate)\n\n  if (done.length >= 2) {\n    done.sort(function (a, b) {\n      if (a.finishDate < b.finishDate) {\n        return 1;\n      }\n\n      if (a.finishDate > b.finishDate) {\n        return -1;\n      }\n\n      return 0;\n    });\n  }\n\n  if (active.length >= 2) {\n    active.sort(function (a, b) {\n      a = a.text.toLowerCase();\n      b = b.text.toLowerCase();\n      if (a < b) return -1;\n      if (a > b) return 1;\n      return 0;\n    });\n  } // console.log(active, done);\n\n\n  var activeTasks = active.map(function (task) {\n    return React.createElement(Task, {\n      key: task.id,\n      task: task,\n      delete: props.delete,\n      change: props.change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    });\n  });\n  var doneTasks = done.map(function (task) {\n    return React.createElement(Task, {\n      key: task.id,\n      task: task,\n      delete: props.delete,\n      change: props.change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  });\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Zadania do zrobienia\"), activeTasks.length > 0 ? activeTasks : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"brak zada\\u0144, ale jeste\\u015B szcz\\u0119sliwym cz\\u0142owiekiem!\")), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"done\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Zadania zrobione \", React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"(\", done.length, \")\")), done.length > 5 && React.createElement(\"span\", {\n    style: {\n      fontSize: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"wy\\u015Bwietlonych jest jedynie 5 ostatnich zada\\u0144\"), doneTasks.slice(0, 5)));\n};\n\nexport default TaskList;","map":{"version":3,"sources":["/Users/kingasekalska/Downloads/ToDoApp/src/components/TaskList.js"],"names":["React","Task","TaskList","props","active","tasks","filter","task","done","length","sort","a","b","finishDate","text","toLowerCase","activeTasks","map","id","delete","change","doneTasks","fontSize","slice"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Task from './Task'\r\n\r\nconst TaskList = (props) => {\r\n\r\n  const active = props.tasks.filter(task => task.active);\r\n  const done = props.tasks.filter(task => !task.active);\r\n\r\n  // done.sort((a, b) => b.finishDate - a.finishDate)\r\n\r\n  if (done.length >= 2) {\r\n    done.sort((a, b) => {\r\n      if (a.finishDate < b.finishDate) {\r\n        return 1\r\n      }\r\n      if (a.finishDate > b.finishDate) {\r\n        return -1\r\n      }\r\n      return 0\r\n    })\r\n  }\r\n  if (active.length >= 2) {\r\n    active.sort((a, b) => {\r\n\r\n      a = a.text.toLowerCase();\r\n      b = b.text.toLowerCase();\r\n\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  // console.log(active, done);\r\n  const activeTasks = active.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change} />)\r\n  const doneTasks = done.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change} />)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"active\">\r\n        <h1>Zadania do zrobienia</h1>\r\n        {activeTasks.length > 0 ? activeTasks : <p>brak zadań, ale jesteś szczęsliwym człowiekiem!</p>}\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div className=\"done\">\r\n        <h3>Zadania zrobione <em>({done.length})</em></h3>\r\n        {done.length > 5 && <span style={{ fontSize: 10 }}>wyświetlonych jest jedynie 5 ostatnich zadań</span>}\r\n        {doneTasks.slice(0, 5)}\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TaskList;"]},"metadata":{},"sourceType":"module"}