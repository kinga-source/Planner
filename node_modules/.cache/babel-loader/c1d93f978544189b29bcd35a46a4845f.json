{"ast":null,"code":"var _jsxFileName = \"/Users/kingasekalska/Desktop/planner/Planner/src/components/TaskList.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport StatusList from \"./StatusList\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useAppState } from \"../context/StateContext\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: \"inline\"\n  }\n}));\nexport default function TaskList(props) {\n  const {\n    tasks,\n    setTasks,\n    editTitle,\n    setEditTitle,\n    editDescription,\n    setEditDescription\n  } = useAppState();\n  const [open, setOpen] = React.useState(false);\n  useEffect(() => {\n    console.log(\"tasks\", tasks);\n    console.log(\"editTitle\", editTitle);\n    console.log(\"editDescription\", editDescription);\n  }, [editTitle, editDescription, tasks]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const classes = useStyles();\n  let history = useHistory();\n\n  function goToEditScreen() {\n    setEditTitle(\"PleaseEditMe\");\n    history.push(\"/add-task\");\n  }\n\n  const removeTask = index => {\n    const newTodos = [...tasks];\n    newTodos.splice(index, 1);\n    setTasks(newTodos);\n  }; // Update existing todo item\n\n  /* function editTask(event, id) {\n    // Prepare new todos state\n    const newTodosState = [...tasks];\n    // Find correct todo item to update\n    newTodosState.find(todo => todo.id === id).title = editTitle;\n    // Update todos state\n    setTasks(newTodosState);\n  } */\n\n  /* const editTask = (e, id) => {\n    const newTodosState = [...tasks];\n    // Find correct todo item to update\n    newTodosState.find(todo => todo.id === id).title = \"Hanf\";\n    newTodosState.find(todo => todo.id === id).description = \"Moran\";\n    setTasks(newTodosState);\n  }; */\n\n\n  const editTask = id => {\n    const newArr = tasks.map(tsk => {\n      if (tsk.id === id) {\n        return { ...tsk,\n          title: \"HOLOGRAM\"\n        };\n      }\n\n      return tsk;\n    });\n    setTasks(newArr);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StatusList, {\n    tasks: tasks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, \"My Tasks\"), /*#__PURE__*/React.createElement(List, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, tasks.map((task, index) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: task.title,\n    secondary: task.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleClickOpen,\n    \"aria-label\": \"delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => removeTask(index),\n    \"aria-label\": \"delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, \"Subscribe\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, \"To subscribe to this website, please enter your email address here. We will send updates occasionally.\"), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Title\",\n    type: \"text\",\n    fullWidth: true,\n    value: editTitle,\n    onChange: e => setEditTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Description\",\n    type: \"text\",\n    fullWidth: true,\n    value: editDescription,\n    onChange: e => setEditDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => editTask(task.id),\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, \"Edit\")))))));\n}","map":{"version":3,"sources":["/Users/kingasekalska/Desktop/planner/Planner/src/components/TaskList.js"],"names":["React","Fragment","useEffect","useHistory","makeStyles","List","ListItem","Divider","IconButton","DeleteIcon","EditIcon","ListItemText","Typography","StatusList","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useAppState","useStyles","theme","root","width","backgroundColor","palette","background","paper","inline","display","TaskList","props","tasks","setTasks","editTitle","setEditTitle","editDescription","setEditDescription","open","setOpen","useState","console","log","handleClickOpen","handleClose","classes","history","goToEditScreen","push","removeTask","index","newTodos","splice","editTask","id","newArr","map","tsk","title","task","description","e","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport StatusList from \"./StatusList\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useAppState } from \"../context/StateContext\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: \"inline\"\n  }\n}));\n\nexport default function TaskList(props) {\n  const {\n    tasks,\n    setTasks,\n    editTitle,\n    setEditTitle,\n    editDescription,\n    setEditDescription\n  } = useAppState();\n\n  const [open, setOpen] = React.useState(false);\n\n  useEffect(() => {\n    console.log(\"tasks\", tasks);\n    console.log(\"editTitle\", editTitle);\n    console.log(\"editDescription\", editDescription);\n  }, [editTitle, editDescription, tasks]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const classes = useStyles();\n  let history = useHistory();\n\n  function goToEditScreen() {\n    setEditTitle(\"PleaseEditMe\");\n    history.push(\"/add-task\");\n  }\n\n  const removeTask = index => {\n    const newTodos = [...tasks];\n    newTodos.splice(index, 1);\n    setTasks(newTodos);\n  };\n\n  // Update existing todo item\n  /* function editTask(event, id) {\n    // Prepare new todos state\n    const newTodosState = [...tasks];\n    // Find correct todo item to update\n    newTodosState.find(todo => todo.id === id).title = editTitle;\n    // Update todos state\n    setTasks(newTodosState);\n  } */\n\n  /* const editTask = (e, id) => {\n    const newTodosState = [...tasks];\n    // Find correct todo item to update\n    newTodosState.find(todo => todo.id === id).title = \"Hanf\";\n    newTodosState.find(todo => todo.id === id).description = \"Moran\";\n    setTasks(newTodosState);\n  }; */\n  const editTask = id => {\n    const newArr = tasks.map(tsk => {\n      if (tsk.id === id) {\n        return { ...tsk, title: \"HOLOGRAM\" };\n      }\n      return tsk;\n    });\n    setTasks(newArr);\n  };\n\n  return (\n    <div>\n      <StatusList tasks={tasks} />\n      <Typography variant=\"h5\" component=\"h2\">\n        My Tasks\n      </Typography>\n      <List className={classes.root}>\n        {tasks.map((task, index) => (\n          <div>\n            <ListItem alignItems=\"flex-start\">\n              <ListItemText primary={task.title} secondary={task.description} />\n              <IconButton onClick={handleClickOpen} aria-label=\"delete\">\n                <EditIcon />\n              </IconButton>\n              <IconButton onClick={() => removeTask(index)} aria-label=\"delete\">\n                <DeleteIcon />\n              </IconButton>\n            </ListItem>\n            <Divider />\n            <Dialog\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"form-dialog-title\"\n            >\n              <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                  To subscribe to this website, please enter your email address\n                  here. We will send updates occasionally.\n                </DialogContentText>\n                <TextField\n                  autoFocus\n                  margin=\"dense\"\n                  id=\"name\"\n                  label=\"Title\"\n                  type=\"text\"\n                  fullWidth\n                  value={editTitle}\n                  onChange={e => setEditTitle(e.target.value)}\n                />\n                <TextField\n                  autoFocus\n                  margin=\"dense\"\n                  id=\"name\"\n                  label=\"Description\"\n                  type=\"text\"\n                  fullWidth\n                  value={editDescription}\n                  onChange={e => setEditDescription(e.target.value)}\n                />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                  Cancel\n                </Button>\n                <Button onClick={() => editTask(task.id)} color=\"primary\">\n                  Edit\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n        ))}\n      </List>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}